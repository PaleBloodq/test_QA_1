version: '3.1'
services:
  nginx:
    image: nginx:alpine
    ports:
      - "8100:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - product_parser
      - payments
      
  postgres:
    image: postgres:14-alpine3.17
    ports:
      - "5551:5432"
    env_file:
      - ./local.env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    image: $CI_REGISTRY_IMAGE/backend:latest
    depends_on:
      - postgres
      - redis
    env_file:
      - ./local.env
    environment:
      - PRODUCT_PARSER_HOST=product_parser
      - POSTGRES_HOST=postgres
    volumes:
      - ./backend:/backend
      - ./rsa:/backend/rsa
    command: sh -c "nohup celery -A settings worker --concurrency=2 --pool=threads --loglevel=info & \
                      nohup celery -A settings beat --loglevel=info & \
                      python manage.py makemigrations && \
                      python manage.py migrate && \
                      (python manage.py createsuperuser --username admin --email admin@mail.ru --noinput || true) && \
                      python manage.py collectstatic --noinput && \
                      nohup python start_service.py & \
                      wait"

  product_parser:
    image: $CI_REGISTRY_IMAGE/product_parser:latest
    depends_on:
      - postgres
      - backend
    env_file:
      - ./local.env
    volumes:
      - ./product_parser:/product_parser
    environment:
      - BACKEND_HOST=backend
    command: [ "python", "main.py" ]


  payments:
    image: $CI_REGISTRY_IMAGE/payments:latest
    depends_on:
      - postgres
      - backend
    volumes:
      - ./payments:/payments
    env_file:
      - ./local.env
    command: [ "python", "main.py" ]

  
  frontend:
    image: $CI_REGISTRY_IMAGE/frontend:$FRONTEND_TAG
    env_file:
      - ./local.env
    ports:
      - "8050:8050"
    command: [ "serve", "-s", "dist", "-l", "8050" ]

  tg_bot:
    image: $CI_REGISTRY_IMAGE/tg_bot:latest
    volumes:
      - ./tg_bot:/tg_bot
    env_file:
      - ./local.env
    command: [ "python", "main.py" ]

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
volumes:
  postgres_data:
