# Generated by Django 5.0.4 on 2024-04-28 00:54

import django.core.validators
import django.db.models.deletion
import imagekit.models.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Язык',
                'verbose_name_plural': 'Языки',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('date', models.DateField(verbose_name='Дата заказа')),
                ('amount', models.IntegerField(verbose_name='Сумма заказа')),
                ('status', models.CharField(choices=[('OK', 'Ок'), ('PAID', 'Оплачен'), ('ERROR', 'Ошибка')], default='OK', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Платформа',
                'verbose_name_plural': 'Платформы',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Телеграм ID')),
                ('playstation_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail от аккаунта PlayStation')),
                ('playstation_password', models.CharField(blank=True, null=True, verbose_name='Пароль от аккаунта PlayStation')),
                ('bill_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail для чеков')),
                ('cashback', models.IntegerField(default=0, verbose_name='Баллы')),
                ('token_seed', models.UUIDField(default=uuid.uuid4, verbose_name='Семя токена')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('promo_code', models.CharField(max_length=255, verbose_name='Промокод')),
                ('expiration', models.DateTimeField(verbose_name='Дата окончания')),
                ('discount', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Скидка %')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('text', models.TextField(verbose_name='Текст сообщения')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_message', to='api.order', verbose_name='Сообщение')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('product', models.CharField(max_length=255, verbose_name='Позиция')),
                ('product_id', models.CharField(max_length=255, verbose_name='ID товара')),
                ('description', models.CharField(max_length=255, verbose_name='Описание')),
                ('price', models.IntegerField(verbose_name='Стоимость')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='api.order', verbose_name='Заказ')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('type', models.CharField(choices=[('GAME', 'Игра'), ('SUBSCRIPTION', 'Подписка'), ('DONATION', 'Донат')], max_length=32, verbose_name='Тип')),
                ('release_date', models.DateField(verbose_name='Дата релиза')),
                ('ps_store_url', models.URLField(blank=True, null=True, verbose_name='Ссылка в PS Store')),
                ('languages', models.ManyToManyField(to='api.language', verbose_name='Языки')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='ProductPublication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('final_price', models.IntegerField(verbose_name='Конечная стоимость')),
                ('original_price', models.IntegerField(verbose_name='Полная стоимость')),
                ('hash', models.CharField(blank=True, max_length=255, null=True, verbose_name='Хэш')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Длительность в месяцах')),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='Количество игровой валюты')),
                ('includes', models.TextField(blank=True, null=True, verbose_name='Включает')),
                ('preview', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='', verbose_name='Превью')),
                ('photo', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='', verbose_name='Изображение')),
                ('cashback', models.IntegerField(blank=True, default=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Кэшбек %')),
                ('ps_plus_discount', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Скидка PS Plus %')),
                ('discount', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Скидка %')),
                ('discount_deadline', models.DateField(blank=True, null=True, verbose_name='Окончание скидки')),
                ('platforms', models.ManyToManyField(to='api.platform', verbose_name='Платформы')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='api.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Издание',
                'verbose_name_plural': 'Издания',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='api.profile', verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('database_name', models.CharField(max_length=255, verbose_name='Системное название')),
                ('products', models.ManyToManyField(blank=True, related_name='tags', to='api.product', verbose_name='Товары')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
    ]
