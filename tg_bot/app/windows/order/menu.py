from aiogram_dialog import Window
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import Start, Url, Back, Next, Button
from aiogram_dialog.widgets.text import Const, Format

from texts import COMPITE_2FA
from .handlers import answer_order, complite_2fa, send_code, send_problem, uncomplite_2fa
from .methods import getter_order
from states.states import OrderSG, MainSG, TwoFaSG
from ...custom_widgets import ScrollingOrdersGroup
from ...filters import is_can_pay, is_can_send_message, is_paid

OrderWin = [
    Window(
        Const('üì¶–í–∞—à–∏ –∑–∞–∫–∞–∑—ã'),
        ScrollingOrdersGroup(),
        Start(Const('–ù–∞–∑–∞–¥'), state=MainSG.main_menu, id='back'),
        state=OrderSG.order_list,
    ),
    Window(
        Format('üì¶–ó–∞–∫–∞–∑ –æ—Ç *{order.date}*'),
        Format('‚ÑπÔ∏è–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: *{order_extra.status_text} {order_extra.emoji}*'),
        Format('üÜî–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞: ||{order.order_id}||'),
        Format('üí∞–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: *{order.amount}‚ÇΩ*'),
        Format('üõí–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞: \n{order_products}'),
        Format('_{order_extra.text}_'),
        Url(Const('–û–ø–ª–∞—Ç–∏—Ç—å'), id='pay', url=Format('{order.payment_url}'), when=is_can_pay),
        Next(Const('–î–∞–ª–µ–µ'), id='next', when=is_paid),
        Start(Const('–ê —á–µ —ç—Ç–æ?'), state=TwoFaSG.wtf_2fa, id='2FA', when=is_paid),

        parse_mode='MarkdownV2',
        getter=getter_order,
        state=OrderSG.order,
    ),
    Window(
        Const(COMPITE_2FA),
        Button(Const('–ü–æ–¥–∫–ª—é—á–∏–ª'), id="complite_2fa", on_click=complite_2fa),
        Button(Const('–£ –º–µ–Ω—è –ª–∞–ø–∫–∏'), id="fail_2fa", on_click=uncomplite_2fa),
        state=OrderSG.choose_step

    ),
    Window(
        Const('–û–∫–µ–π, —Ç–æ–≥–¥–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∫–æ–¥!)'),
        MessageInput(func=send_code),
        Back(Const('–ù–∞–∑–∞–¥')),
        state=OrderSG.success,
    ),
    Window(
        Const('–û–∫–µ–π, —Ç–æ–≥–¥–∞ –æ–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É!)'),
        MessageInput(func=send_problem),
        Back(Const('–ù–∞–∑–∞–¥')),
        state=OrderSG.failed,
    ),
]
