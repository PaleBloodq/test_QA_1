stages:
  - build
  - deploy

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/backend ./backend
    - docker build -t $CI_REGISTRY_IMAGE/product_parser ./product_parser
    - docker build -t $CI_REGISTRY_IMAGE/payments ./payments
    - docker build -t $CI_REGISTRY_IMAGE/frontend ./frontend
    - docker push $CI_REGISTRY_IMAGE/backend
    - docker push $CI_REGISTRY_IMAGE/product_parser
    - docker push $CI_REGISTRY_IMAGE/payments
    - docker push $CI_REGISTRY_IMAGE/frontend
  only:
    - dev


deploy:
  stage: deploy
  script:
    - envsubst < .env > local.env
    - if [ ! -d "$DOCKER_COMPOSE_PATH/rsa" ]; then mkdir -p $DOCKER_COMPOSE_PATH/rsa && openssl genpkey -algorithm RSA -out $DOCKER_COMPOSE_PATH/rsa/private.pem -aes256 -pass pass:yourpassword && openssl rsa -pubout -in $DOCKER_COMPOSE_PATH/rsa/     private.pem -out $DOCKER_COMPOSE_PATH/rsa/public.pem -passin pass:yourpassword; fi
    - cp $CI_PROJECT_DIR/docker-compose.yml $DOCKER_COMPOSE_PATH/docker-compose.yml
    - cd $DOCKER_COMPOSE_PATH && docker-compose pull && docker-compose up -d
  only:
    - dev

