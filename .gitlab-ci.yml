stages:
  - build
  - deploy

build_job:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/postgres ./postgres
    - docker build -t $CI_REGISTRY_IMAGE/backend ./backend
    - docker build -t $CI_REGISTRY_IMAGE/product_parser ./product_parser
    - docker build -t $CI_REGISTRY_IMAGE/payments ./payments
    - docker push $CI_REGISTRY_IMAGE/postgres
    - docker push $CI_REGISTRY_IMAGE/backend
    - docker push $CI_REGISTRY_IMAGE/product_parser
    - docker push $CI_REGISTRY_IMAGE/payments
  only:
    - dev

deploy_job:
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOY_SERVER >> ~/.ssh/known_hosts
  script:
    - envsubst < template.env > local.env
    - scp $CI_PROJECT_DIR/docker-compose.yml $DEPLOY_USER@$DEPLOY_SERVER:$DOCKER_COMPOSE_PATH/docker-compose.yml
    - ssh $DEPLOY_USER@$DEPLOY_SERVER 'cd $DOCKER_COMPOSE_PATH && docker-compose pull && docker-compose up -d'
  only:
    - dev
